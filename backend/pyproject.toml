[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

[project]
name = "app"
version = "0.1.0"
description = "OpenAstra application backend"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.10"
authors = [
    {name = "Admin", email = "admin@openastra.com"}
]
maintainers = [
    {name = "OpenAstra Team", email = "team@openastra.com"}
]
keywords = ["api", "backend", "fastapi"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "uvicorn[standard]>=0.24.0.post1",
    "fastapi>=0.109.1",
    "python-multipart>=0.0.7",
    "email-validator>=2.1.0.post1",
    "passlib[bcrypt]>=1.7.4",
    "tenacity>=8.2.3",
    "pydantic>2.0",
    "emails>=0.6",
    "gunicorn>=21.2.0",
    "jinja2>=3.1.2",
    "alembic>=1.12.1",
    "httpx==0.27.0",
    "psycopg[binary]>=3.1.13",
    "sqlmodel==0.0.22",
    "bcrypt==4.0.1",
    "pydantic-settings>=2.2.1",
    "sentry-sdk[fastapi]>=2.15.0",
    "nanoid>=2.0.0",
    "openai>=1.17.1",
    "pyjwt>=2.8.0",
    "pyhumps>=3.8.0",
    "colorama>=0.4.6",
    "amplitude-analytics>=1.1.4",
    "chromadb>=0.6.3",
    "openapi3-parser>=1.1.19",
    "mcp>=1.3.0",
    "fastapi-mcp>=0.1.3",
]

[project.urls]
"Homepage" = "https://openastra.com"
"Repository" = "https://github.com/openastra/"
"Documentation" = "https://docs.openastra.com"
"Bug Tracker" = "https://github.com/openastra/app/issues"
"Changelog" = "https://github.com/openastra/app/blob/main/CHANGELOG.md"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[project.scripts]
start = "app.main:app"
dev = "app.main:dev"
test = "pytest:main"
